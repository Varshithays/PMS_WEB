/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-01-14 07:12:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Customer Registration - Parcel Management System</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/styles.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"navbar\">\r\n");
      out.write("        <a href=\"#\" class=\"navbar-brand\">Parcel Management System</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"auth-container\">\r\n");
      out.write("        <h1>Customer Registration</h1>\r\n");
      out.write("\r\n");
      out.write("        <!-- Display Success Message -->\r\n");
      out.write("        ");
 if ("success".equals(request.getAttribute("status"))) { 
      out.write("\r\n");
      out.write("            <div class=\"alert alert-success\">\r\n");
      out.write("                Registration successful! <a href=\"");
      out.print( request.getContextPath() );
      out.write("/login\">Login here</a>.\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Display Error Message -->\r\n");
      out.write("        ");
 if ("error".equals(request.getAttribute("status"))) { 
      out.write("\r\n");
      out.write("            <div class=\"alert alert-danger\">");
      out.print( request.getAttribute("errorMessage") );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form action=\"");
      out.print( request.getContextPath() );
      out.write("/register\" method=\"post\">\r\n");
      out.write("            <!-- Name Field -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"name\">Name:</label>\r\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"name\" value=\"");
      out.print( request.getParameter("name") != null ? request.getParameter("name") : "" );
      out.write("\" maxlength=\"50\" required>\r\n");
      out.write("                ");
 if (request.getAttribute("nameError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("nameError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Email Field -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"email\">Email:</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" value=\"");
      out.print( request.getParameter("email") != null ? request.getParameter("email") : "" );
      out.write("\" required>\r\n");
      out.write("                ");
 if (request.getAttribute("emailError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("emailError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("    <label for=\"mobile\">Mobile Number:</label>\r\n");
      out.write("    <div style=\"display: flex; gap: 5px;\">\r\n");
      out.write("        <select id=\"countryCode\" name=\"countryCode\" required>\r\n");
      out.write("            <option value=\"+1\" ");
      out.print( "+1".equals(request.getParameter("countryCode")) ? "selected" : "" );
      out.write(">+1 (USA/Canada)</option>\r\n");
      out.write("            <option value=\"+44\" ");
      out.print( "+44".equals(request.getParameter("countryCode")) ? "selected" : "" );
      out.write(">+44 (UK)</option>\r\n");
      out.write("            <option value=\"+91\" ");
      out.print( "+91".equals(request.getParameter("countryCode")) ? "selected" : "" );
      out.write(">+91 (India)</option>\r\n");
      out.write("          share\r\n");
      out.write("        </select>\r\n");
      out.write("        <input type=\"tel\" id=\"mobile\" name=\"mobile\" value=\"");
      out.print( request.getParameter("mobile") != null ? request.getParameter("mobile") : "" );
      out.write("\" pattern=\"\\\\d{10}\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
 if (request.getAttribute("mobileError") != null) { 
      out.write("\r\n");
      out.write("        <small class=\"text-danger\">");
      out.print( request.getAttribute("mobileError") );
      out.write("</small>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!-- Address -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"address\">Address:</label>\r\n");
      out.write("                <textarea id=\"address\" name=\"address\" required>");
      out.print( request.getParameter("address") != null ? request.getParameter("address") : "" );
      out.write("</textarea>\r\n");
      out.write("                ");
 if (request.getAttribute("addressError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("addressError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Username -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"username\">User ID:</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" value=\"");
      out.print( request.getParameter("username") != null ? request.getParameter("username") : "" );
      out.write("\" minlength=\"5\" maxlength=\"20\" required>\r\n");
      out.write("                ");
 if (request.getAttribute("usernameError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("usernameError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Password -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"password\">Password:</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" minlength=\"8\" maxlength=\"30\" required>\r\n");
      out.write("                ");
 if (request.getAttribute("passwordError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("passwordError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Confirm Password -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"confirmPassword\">Confirm Password:</label>\r\n");
      out.write("                <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" minlength=\"8\" maxlength=\"30\" required>\r\n");
      out.write("                ");
 if (request.getAttribute("confirmPasswordError") != null) { 
      out.write("\r\n");
      out.write("                    <small class=\"text-danger\">");
      out.print( request.getAttribute("confirmPasswordError") );
      out.write("</small>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"formgroup\">\r\n");
      out.write("					<input type=\"checkbox\" id=\"emailNotifications\"\r\n");
      out.write("						name=\"emailNotifications\" id=\"emailNotifications\" /> <label\r\n");
      out.write("						class=\"notification\" for=\"emailNotifications\">Receive email\r\n");
      out.write("						notifications related to delivery</label>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Submit and Reset Buttons -->\r\n");
      out.write("            <button type=\"submit\" class=\"btn\">Register</button>\r\n");
      out.write("            <button type=\"reset\" class=\"btn\">Reset</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <div class=\"mt-4\">\r\n");
      out.write("            <p>Already have an account? <a href=\"login.jsp\">Login here</a></p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
